function ReadVagrantConfig() {
    $jsonFilePath = ".\deploy\vagrant\vagrant-config.json"
    $config = Get-Content -Path $jsonFilePath -Raw | ConvertFrom-Json

    return $config
}

function ReadServiceTemplate(){
    $serviceTemplateFilePath = ".\deploy\vagrant\service_template.txt"
    $config = Get-Content -Path $serviceTemplateFilePath -Raw

    return $config
}

function ReadProvisionerTemplate(){
    $provisionerTemplateFilePath = ".\deploy\vagrant\provisioner_template.sh"
    $config = Get-Content -Path $provisionerTemplateFilePath -Raw

    return $config
}

function ReadProvisionerTemplate(){
    $provisionerTemplateFilePath = ".\deploy\vagrant\provisioner_template.sh"
    $config = Get-Content -Path $provisionerTemplateFilePath -Raw

    return $config
}

function CreateServices(){
    $config = ReadVagrantConfig
    $serviceTemplate = ReadServiceTemplate
    
    foreach ($AppConfig in $config.Apps.AppConfig){
        $servicePath = ".\deploy\vagrant\" + $AppConfig.Service.ServiceName + ".service"
        $content = $serviceTemplate `
        -replace ("{{ServiceDescription}}"), $AppConfig.Service.ServiceDescription `
        -replace ("{{ServiceWorkingDirectory}}"), $AppConfig.Service.WorkingDirectory `
        -replace ("{{ServiceExecStart}}"), $AppConfig.Service.ExecStart `
        -replace ("{{ServiceExecStop}}"), $AppConfig.Service.ExecStop
        Set-Content -Path $servicePath -Value $content
    }
}

function CreateProvisionerScript() {
    $config = ReadVagrantConfig
    $provisionerTemplate = ReadProvisionerTemplate

    $provisionerPath = ".\deploy\vagrant\provisioner.sh"

    $AppDirs = @()
    $AppMounts = @()
    $AppServiceNames = @()
    $AppDockerComposers = @()

    foreach ($AppDirectory in $config.Apps.AppConfig.Service.AppDirectory){
        $AppDirs += "`"" + $AppDirectory + "`"" + "` "
    }
    foreach ($AppMount in $config.Apps.AppConfig.Service.ServiceName){
        $AppMounts += "`"" + "/tmp/$AppMount" + "`"" + "` "
    }
    foreach ($AppServiceName in $config.Apps.AppConfig.Service.ServiceName){
        $AppServiceNames += "`"" + $AppServiceName + "`"" + "` "
    }
    foreach ($AppDockerComposer in $config.Apps.AppConfig.Docker.Compose){
        $AppDockerComposers += "`"" + $AppDockerComposer + "`"" + "` "
    }

    $content = $provisionerTemplate `
        -replace ("{{AppDirectory}}"), $AppDirs `
        -replace ("{{AppMount}}"), $AppMounts `
        -replace ("{{AppDockerComposeFile}}"), $AppDockerComposers `
        -replace ("{{AppServiceName}}"), $AppServiceNames
        Set-Content -Path $provisionerPath -Value $content
     
}

CreateProvisionerScript