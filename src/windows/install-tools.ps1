# Download Google Chrome installer
Invoke-WebRequest "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "$env:TEMP\chrome_installer.exe"

# Install Google Chrome silently
Start-Process -FilePath $downloadPath -ArgumentList "/silent /install" -Wait

# Download Microsoft Visual C++ Redistributable for Visual Studio 2019 (x64)
Invoke-WebRequest "https://aka.ms/vs/16/release/vc_redist.x64.exe" -OutFile "$env:TEMP\vc_redist.x64.exe"

# Install Microsoft Visual C++ Redistributable for Visual Studio 2019 (x64) silently
Start-Process -FilePath "$env:TEMP\vc_redist.x64.exe" -ArgumentList '/install /quiet /norestart' -Wait

# Enable WSL feature
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux

# Enable Virtual Machine feature
Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform

# Download Ubuntu 20.04 LTS from Microsoft Store
$appName = "Ubuntu 20.04 LTS"
$appInstaller = (Get-AppxPackage -Name $appName).InstallLocation + "\app.ico"
if (!(Test-Path $appInstaller)) {
    (New-Object -ComObject Shell.Application).ShellExecute("ms-windows-store://pdp/?productid=9n6svws3rx71")
    Write-Output "Please download and install $appName from Microsoft Store."
    pause
}

# Set up Ubuntu
$distro = "Ubuntu-20.04"
$username = "yourusername"

wsl --import $distro "C:\Users\$env:USERNAME\AppData\Local\Microsoft\WindowsApps\Ubuntu-20.04" --version 2
wsl -d $distro -u root sh -c "apt update && apt upgrade -y && useradd -m $username && echo $username:password | chpasswd"

# Download Git installation package
Invoke-WebRequest "https://github.com/git-for-windows/git/releases/download/v2.31.1.windows.1/Git-2.31.1-64-bit.exe" -OutFile "$env:TEMP\GitInstaller.exe"

# Install Git silently
Start-Process -FilePath "$env:TEMP\GitInstaller.exe" -ArgumentList '/VERYSILENT' -Wait

# Download Go installation package
Invoke-WebRequest "https://golang.org/dl/go1.17.1.windows-amd64.msi" -OutFile "$env:TEMP\GoInstaller.msi"

# Install Go silently
Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $env:TEMP\GoInstaller.msi /quiet /qn" -Wait

# Download VSCode installation package
Invoke-WebRequest "https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user" -OutFile "$env:TEMP\VSCodeInstaller.exe"

# Install VSCode silently
Start-Process -FilePath "$env:TEMP\VSCodeInstaller.exe" -ArgumentList '/silent' -Wait

# Download Docker installation package
Invoke-WebRequest "https://download.docker.com/win/stable/Docker%20Desktop%20Installer.exe" -OutFile "$env:TEMP\DockerDesktopInstaller.exe"

# Install Docker silently
Start-Process -FilePath "$env:TEMP\DockerDesktopInstaller.exe" -ArgumentList '/quiet' -Wait

# Check if Docker is running
if (!(Get-Service Docker).Status -eq 'Running') {
    # Start Docker service
    Start-Service Docker
}

# Download Postman installation package
Invoke-WebRequest "https://dl.pstmn.io/download/latest/win64" -OutFile "$env:TEMP\PostmanInstaller.exe"

# Install Postman silently
Start-Process -FilePath "$env:TEMP\PostmanInstaller.exe" -ArgumentList '/S' -Wait

# Download OWASP ZAP installation package
Invoke-WebRequest "https://github.com/zaproxy/zaproxy/releases/download/v2.10.0/ZAP_2.10.0_windows-x64.exe" -OutFile "$env:TEMP\ZAPInstaller.exe"

# Install OWASP ZAP silently
Start-Process -FilePath "$env:TEMP\ZAPInstaller.exe" -ArgumentList '/S' -Wait

# Download Obsidian installation package
Invoke-WebRequest "https://github.com/obsidianmd/obsidian-releases/releases/download/v0.12.19/Obsidian-0.12.19.exe" -OutFile "$env:TEMP\ObsidianInstaller.exe"

# Install Obsidian silently
Start-Process -FilePath "$env:TEMP\ObsidianInstaller.exe" -ArgumentList '/S' -Wait

# Download Burp Suite Community Edition installation package
Invoke-WebRequest "https://portswigger.net/burp/releases/download?product=community&version=2021.5.2&type=Windows" -OutFile "$env:TEMP\BurpSuiteInstaller.exe"

# Install Burp Suite Community Edition silently
Start-Process -FilePath "$env:TEMP\BurpSuiteInstaller.exe" -ArgumentList '/S' -Wait